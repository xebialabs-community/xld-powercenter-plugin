<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2020 Digital.ai

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<synthetic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.xebialabs.com/deployit/synthetic"
           xsi:schemaLocation="http://www.xebialabs.com/deployit/synthetic synthetic.xsd">


    <type type="powercenter.PowercenterContainer" extends="generic.Container">
        <property name="host" kind="ci" referenced-type="overthere.Host" as-containment="true" />
        <property name="home" category="Powercenter" description="Path for the home directory"/>
        <property name="customPmrepPath" label="Custom PMREP Path" required="false" category="Powercenter"
                  description="If the pmrep binary is not at &quot;server\bin\pmrep&quot; (Windows) or &quot;server/bin/pmrep&quot; (Linux), relative to the home directory, please specify the relative path here.  If left blank, the default location will be used."/>
        <property name="repository" category="Powercenter"/>
        <property name="domain" category="Powercenter"/>
        <property name="userName" category="Powercenter"/>
        <property name="password" password="true" category="Powercenter"/>
        <property name="versioningEnabled" kind="boolean" default="false" category="Powercenter"
                  description="If set to true, undeploy will not be executed, as pmrep deleteobject doesn't work with versioning enabled."/>

        <property name="paramFilesDirPath" kind="string"  category="Powercenter"
                  description="Param files directory."/>
        <property name="filesDirPath" kind="string" category="Powercenter"
                  description="Supplementary files directory."/>

        <method name="verifyConnection" label="Verify Connection" delegate="shellScript"
                script="powercenter/powercenter_checkConnection"/>
    </type>

    <type type="powercenter.DeployedPowercenterXml" extends="udm.BaseDeployedArtifact"
          deployable-type="powercenter.PowercenterXml" container-type="powercenter.PowercenterContainer"
          description="Powercenter xml containting one or more Powercenter objects">
        <generate-deployable type="powercenter.PowercenterXml" extends="udm.BaseDeployableFileArtifact"/>
        <property name="sourceRepository" default="SOURCE_REPO" category="Powercenter"/>
        <property name="folderNames" kind="list_of_string" required="false" category="Powercenter"/>
        <property name="folderNameMap" kind="map_string_string" required="false" category="Powercenter"/>
        <property name="objectNames" kind="list_of_string" category="Powercenter"/>
        <property name="objectTypes" kind="list_of_string" category="Powercenter"/>
    </type>

    <type type="powercenter.DeployedPowercenterXmlSet" extends="udm.BaseDeployedArtifact"
          deployable-type="powercenter.PowercenterXmlSet" container-type="powercenter.PowercenterContainer"
          description="Powercenter xml containting one or more Powercenter objects">
        <generate-deployable type="powercenter.PowercenterXmlSet" extends="udm.BaseDeployableFolderArtifact"/>
        <property name="sourceRepository" default="SOURCE_REPO" category="Powercenter"/>
        <property name="folderNames" kind="list_of_string" required="false" category="Powercenter" />
        <property name="folderNameMap" kind="map_string_string" required="false" category="Powercenter" />
        <property name="objectNames" kind="list_of_string" category="Powercenter"/>
        <property name="objectTypes" kind="list_of_string" category="Powercenter"/>
    </type>

    <type type="powercenter.DeployedPowercenterParamFile" extends="generic.CopiedArtifact"
          deployable-type="powercenter.PowercenterParamFile" container-type="powercenter.PowercenterContainer"
          description="Powercenter param file.">
        <generate-deployable type="powercenter.PowercenterParamFile" extends="generic.File" />

        <property name="functionality" kind="string" category="Powercenter"
                  description="The value will determine in which subdirectory within the param files directory the param file will be copied."/>

        <property name="createTargetDirectory" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="targetDirectoryShared" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="targetDirectory" default="${deployed.container.paramFilesDirPath}/${deployed.functionality}/" hidden="true" category="Powercenter"/>
        <property name="targetFile" default="${deployed.name}" hidden="false" category="Powercenter"/>
        <property name="preserveExistingFiles" default="true" kind="boolean" hidden="false" category="Powercenter"/>
    </type>

    <type-modification type="powercenter.PowercenterParamFile">
        <property name="scanPlaceholders" default="true" kind="boolean" category="Powercenter"/>
        <property name="textFileNamesRegex" default=".+\.(dat | param)" hidden="true" category="Powercenter"/>
    </type-modification>

    <type type="powercenter.DeployedPowercenterMiscFile" extends="generic.CopiedArtifact"
          deployable-type="powercenter.PowercenterMiscFile" container-type="powercenter.PowercenterContainer"
          description="Powercenter Miscellaneous files.">
        <generate-deployable type="powercenter.PowercenterMiscFile" extends="generic.File" />

        <property name="functionality" kind="string" category="Powercenter"
                  description="The value will determine in which subdirectory within the files directory the file will be copied."/>

        <property name="createTargetDirectory" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="targetDirectoryShared" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="targetDirectory" default="${deployed.container.filesDirPath}/${deployed.functionality}/" hidden="true" category="Powercenter"/>
        <property name="targetFile" default="${deployed.name}" hidden="false" category="Powercenter"/>
        <property name="filePermissions" required="false" category="Powercenter"
                  description="If set, the UNIX file permissions to be applied to the artifact, e.g. 644">
            <rule type="regex" pattern="[0-7]{3}"/>
         </property>
        <property name="preserveExistingFiles" default="true" kind="boolean" hidden="false" category="Powercenter"/>
    </type>

    <type-modification type="powercenter.PowercenterMiscFile">
        <property name="scanPlaceholders" default="true" kind="boolean" category="Powercenter"/>
        <property name="textFileNamesRegex" default=".+\.(sh | ksh | txt | sql | ctl | properties | config | pl | env | dat)" hidden="false" category="Powercenter"
                  description="A regex something like .+\.(sql | txt)"/>
    </type-modification>

    <type type="powercenter.DeployedPowercenterMiscFolder" extends="generic.CopiedArtifact"
          deployable-type="powercenter.PowercenterMiscFolder" container-type="powercenter.PowercenterContainer"
          description="Powercenter Miscellaneous files.">
        <generate-deployable type="powercenter.PowercenterMiscFolder" extends="generic.Folder" />

        <property name="functionality" kind="string" description="The value will determine in which subdirectory within the files directory the file will be copied."/>

        <property name="targetDirectory" default="${deployed.container.filesDirPath}/${deployed.functionality}/" hidden="true" category="Powercenter"/>
        <property name="targetFile" default="${deployed.name}" hidden="true" category="Powercenter"/>
        <property name="createTargetDirectory" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="targetDirectoryShared" default="true" kind="boolean" hidden="true" category="Powercenter"/>
        <property name="filePermissions" required="false" category="Powercenter"
                  description="If set, the UNIX file permissions to be applied to the artifact, e.g. 644">
            <rule type="regex" pattern="[0-7]{3}"/>
        </property>
        <property name="preserveExistingFolder" default="true" kind="boolean" hidden="false" category="Powercenter"/>
    </type>

    <type-modification type="powercenter.PowercenterMiscFolder">
        <property name="scanPlaceholders" default="true" kind="boolean" category="Powercenter"/>
        <property name="textFileNamesRegex" default=".+\.(sh | ksh | txt | sql | ctl | properties | config | pl | env | dat)" hidden="false" description="A regex something like .+\.(sql | txt)" category="Powercenter"/>
    </type-modification>

</synthetic>
